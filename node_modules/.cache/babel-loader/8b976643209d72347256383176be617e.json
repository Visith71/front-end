{"remainingRequest":"C:\\Users\\User\\Documents\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\User\\Documents\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\User\\Documents\\front-end\\src\\components\\charts\\DayPartsStatistic.vue?vue&type=template&id=57aace7c&scoped=true","dependencies":[{"path":"C:\\Users\\User\\Documents\\front-end\\src\\components\\charts\\DayPartsStatistic.vue","mtime":1658915537896},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658915600135},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1658915600945},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1658915603265},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658915600135},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1658915601640}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\User\\Documents\\front-end\\src\\components\\charts\\DayPartsStatistic.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"day-parts-stat\">\r\n    <div class=\"day-parts-stat-barchart\">\r\n      <div class=\"select-option\">\r\n        <div class=\"selection-section\">\r\n        <select v-model=\"selectedLabel\" @change=\"getLabelOption($event)\" class=\"option-selection\">\r\n          <option value=\"\" disabled>Please Select an option</option>\r\n          <option v-for=\"label in labelOptions\" :key=\"label\" :value=\"label\">\r\n            {{label}}\r\n          </option>\r\n        </select>\r\n        <v-date-picker \r\n          v-model=\"range\" \r\n          is-range \r\n          v-if=\"showDatePicker\"\r\n          :select-attribute=\"selectDragAttribute\"\r\n          :drag-attribute=\"selectDragAttribute\"\r\n          @drag=\"dragValue = $event\"\r\n          :max-date='new Date()'\r\n          color=\"teal\"\r\n          class=\"date-range-picker\"\r\n        >\r\n          <template v-slot=\"{ inputValue, inputEvents }\">\r\n            <div class=\"date-picker-container\">\r\n              <input\r\n                :value=\"inputValue.start\"\r\n                v-on=\"inputEvents.start\"\r\n              />\r\n              <h2>👉</h2>\r\n              <input\r\n                :value=\"inputValue.end\"\r\n                v-on=\"inputEvents.end\"\r\n              />\r\n            </div>\r\n          </template>\r\n          <template v-slot:day-popover=\"{ format }\">\r\n            <div>\r\n              {{ format(dragValue ? dragValue.start : range.start, 'MMM D') }}\r\n              -\r\n              {{ format(dragValue ? dragValue.end : range.end, 'MMM D') }}\r\n            </div>\r\n          </template>\r\n        </v-date-picker>\r\n        <Calendar \r\n          v-model=\"monthPickerValue\" \r\n          view=\"month\" \r\n          dateFormat=\"mm/yy\" \r\n          v-if=\"showMonthPicker\" \r\n          :showIcon=\"true\"\r\n        />\r\n        <select v-model=\"yearPickerValue\" \r\n        class=\"option-selection year-selection\" \r\n        v-if=\"showYearPicker\">\r\n          <option v-for=\"year in loopYears\" :key=\"year\" :value=\"year\" class=\"year-option\">\r\n            {{year}}\r\n          </option>\r\n        </select>\r\n        </div>\r\n        <div class=\"barchart-title\" v-if=\"!isYearly\">\r\n          <p>{{ format(new Date(range.start), 'MMM dd') }} - {{ format(new Date(range.end), 'MMM dd') }}</p>\r\n          <h2>ALL BOOKING HOURS</h2>\r\n        </div>\r\n        <div class=\"barchart-title\" v-if=\"isYearly\">\r\n          <p>JAN​​ {{ yearPickerValue }} - DEC {{ yearPickerValue }}</p>\r\n          <h2>ALL BOOKING HOURS</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"day-parts-barchart\">\r\n        <vue3-chart-js v-bind=\"{ ...barChart }\" ref=\"barChartRef\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"day-parts-stat-doughnut\">\r\n      <div style=\"height:400px;width: 400px;display: flex;flex-direction:column;\">\r\n        <div class=\"doughnut-title\" v-if=\"isYearly\">\r\n          <p>JAN {{ yearPickerValue }} - DEC {{ yearPickerValue }}</p>\r\n          <h2>FAVORITE PARTS OF THE DAY</h2>\r\n        </div>\r\n        <div class=\"doughnut-title\" v-if=\"!isYearly\">\r\n          <p>{{ format(new Date(range.start), 'MMM dd') }} - {{ format(new Date(range.end), 'MMM dd') }}</p>\r\n          <h2>FAVORITE PARTS OF THE DAY</h2>\r\n        </div>\r\n        <vue3-chart-js\r\n          :id=\"doughnutChart.id\"\r\n          ref=\"chartRef\"\r\n          :type=\"doughnutChart.type\"\r\n          :data=\"doughnutChart.data\"\r\n          :options=\"doughnutChart.options\"\r\n        ></vue3-chart-js>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue3ChartJs from '@j-t-mcc/vue3-chartjs'\r\n// import { Calendar, DatePicker } from 'v-calendar'\r\nimport { format } from 'date-fns'\r\nimport axios from 'axios'\r\nimport { computed, onBeforeMount, onMounted, ref, toRefs, watch } from 'vue'\r\nimport Calendar from 'primevue/calendar';\r\n\r\nexport default {\r\n  props: {\r\n    selectedClub: {\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    Vue3ChartJs,\r\n    Calendar\r\n  },\r\n  computed: {\r\n    selectDragAttribute() {\r\n      return {\r\n        popover: {\r\n          visibility: 'hover',\r\n          isInteractive: false\r\n        }\r\n      }\r\n    }\r\n  },\r\n  setup (props) {\r\n    const selectedClub = toRefs(props).selectedClub\r\n    const selectedClubId = ref(null)\r\n    const labelOptions = ref(['Last 7 Days', 'Last 30 Days', 'Monthly', 'Yearly', 'Date Range'])\r\n    const selectedLabel = ref('Last 7 Days')\r\n    const showDatePicker = ref(false)\r\n    const showMonthPicker = ref(false)\r\n    const showYearPicker = ref(false)\r\n    const monthPickerValue = ref(null)\r\n    const yearPickerValue = ref(null)\r\n\r\n    const loopYears = computed(() => {\r\n      var thisYear = new Date().getFullYear()\r\n      var previousYear = thisYear - 10\r\n      var yearsList = []\r\n      for(let i = previousYear; i <= thisYear; i++) {\r\n        yearsList.push(i)\r\n      }\r\n      return yearsList\r\n    })\r\n\r\n    const range = ref({\r\n      start: new Date(),\r\n      end: new Date()\r\n    })\r\n    const barChartRef = ref(null)\r\n    const chartRef = ref(null)\r\n\r\n    const isYearly = ref(false)\r\n\r\n    const dragValue = ref(null)\r\n\r\n    watch(() => selectedClub.value, (currentValue, oldValue) => {\r\n      if (currentValue !== oldValue) {\r\n        const startDate = format(new Date(range.value.start), 'yyyy-MM-dd') \r\n        const endDate = format(new Date(range.value.end), 'yyyy-MM-dd')\r\n        const activeClubId = currentValue.id\r\n        getRangeDateData(startDate, endDate, activeClubId)\r\n        getYearData(activeClubId, yearPickerValue.value)\r\n      }\r\n    }, {\r\n      deep: true\r\n    })\r\n\r\n    watch(() => yearPickerValue, (currentValue, oldValue) => {\r\n      if(currentValue.value || oldValue.value) {\r\n        isYearly.value = true\r\n      } else {\r\n        isYearly.value = false\r\n      }\r\n      const clubIdParse = JSON.parse(localStorage.getItem('sportClub'))\r\n      const activeClubId = clubIdParse && clubIdParse.id ? clubIdParse.id : selectedClub.value.id\r\n      getYearData(activeClubId, currentValue.value)\r\n    },\r\n    { deep: true })\r\n\r\n    const getYearData = async (activeClubId, year) => {\r\n      if (!activeClubId) {\r\n        return;\r\n      }\r\n      await axios.get(`get-yearly-dashboard-statistic-data/${activeClubId}/${year}`)\r\n      .then(res => {\r\n        var yearlyTotalHours = res.data[4].TotalHours\r\n        var yearsRange = res.data[0].Morning[0].map(function (day) {\r\n          return day.month\r\n        })\r\n        var yearlyMorningHoursData = res.data[0].Morning[0].map(function(hours) {\r\n          return hours.total_hours\r\n        })\r\n        var yearlyAfternoonHoursData = res.data[1].Afternoon[0].map(function (hours) {\r\n          return hours.total_hours\r\n        })\r\n        var yearlyEveningHoursData = res.data[2].Evening[0].map(function (hours) {\r\n          return hours.total_hours\r\n        })\r\n        var yearlyNightHoursData = res.data[3].Night[0].map(function (hours) {\r\n          return hours.total_hours\r\n        })\r\n\r\n          doughnutChart.options.plugins.title = {\r\n            text: `FAVORITE PART OF THE DAY FROM JAN - DEC ${yearPickerValue.value}`,\r\n            display: false\r\n          }\r\n          doughnutChart.data.labels = ['Morning', 'Afternoon', 'Evening', 'Night']\r\n          doughnutChart.data.datasets = [\r\n            {\r\n              backgroundColor: [\r\n                '#abecd8',\r\n                '#46cdcf',\r\n                '#3c84a8',\r\n                '#47466d'\r\n              ],\r\n            data: yearlyTotalHours\r\n            }\r\n          ]\r\n          chartRef.value.update(300)\r\n\r\n          barChart.options.plugins.title = {\r\n            display: false,\r\n            text: `BOOKING HOURS DATA FROM JAN-DEC ${yearPickerValue.value}`\r\n          }\r\n          barChart.data.labels = yearsRange\r\n          barChart.data.datasets = [\r\n            {\r\n              label: \"Morning\",\r\n              backgroundColor: ['#abecd8'],\r\n              data: yearlyMorningHoursData,\r\n            },\r\n            {\r\n              label: \"Afternoon\",\r\n              backgroundColor: ['#46cdcf'],\r\n              data: yearlyAfternoonHoursData,\r\n            },\r\n            {\r\n              label: \"Evening\",\r\n              backgroundColor: ['#3c84a8'],\r\n              data: yearlyEveningHoursData,\r\n            },\r\n            {\r\n              label: \"Night\",\r\n              backgroundColor: ['#47466d'],\r\n              data: yearlyNightHoursData,\r\n            },\r\n          ]\r\n          barChartRef.value.update(250)\r\n      })\r\n      .catch(err => {\r\n        if(err.response) {\r\n          console.log(err.response.data.message)\r\n        } else {\r\n          console.log('No response!')\r\n        }\r\n      })\r\n    }\r\n\r\n    const getLabelOption = (e) => {\r\n      if(e.target.value) {\r\n        isYearly.value = false\r\n      }\r\n\r\n      if(e.target.value === 'Date Range') {\r\n        showDatePicker.value = true\r\n        yearPickerValue.value = null\r\n      } else {\r\n        showDatePicker.value = false\r\n      }\r\n\r\n      if(e.target.value === 'Last 7 Days') {\r\n        var date = new Date()\r\n        date.setDate(date.getDate() - 7);\r\n        yearPickerValue.value = null\r\n\r\n        range.value.end = new Date(),\r\n        range.value.start = new Date(date)\r\n      }\r\n\r\n      if(e.target.value === 'Last 30 Days') {\r\n        var date = new Date()\r\n        date.setDate(date.getDate() - 30);\r\n        yearPickerValue.value = null\r\n\r\n        range.value.end = new Date(),\r\n        range.value.start = new Date(date)\r\n      }\r\n\r\n      if(e.target.value === 'Monthly') {\r\n        showMonthPicker.value = true\r\n        monthPickerValue.value = new Date()\r\n        yearPickerValue.value = null\r\n      } else {\r\n        showMonthPicker.value = false\r\n      }\r\n\r\n      if(e.target.value === 'Yearly') {\r\n        showYearPicker.value = true\r\n        yearPickerValue.value = new Date().getFullYear()\r\n      } else {\r\n        showYearPicker.value = false\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      var date = new Date()\r\n      date.setDate(date.getDate() - 7);\r\n\r\n      range.value.end = new Date(),\r\n      range.value.start = new Date(date)\r\n    })\r\n\r\n    watch(() => monthPickerValue, (currentValue, oldValue) => {\r\n      var date = currentValue.value\r\n      var firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      var lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n      range.value.end = lastDateOfMonth\r\n      range.value.start = firstDateOfMonth\r\n    },\r\n    { deep: true })\r\n\r\n    watch(() => range, (currentValue, oldValue) => {\r\n      const startDate = format(new Date(currentValue.value.start), 'yyyy-MM-dd') \r\n      const endDate = format(new Date(currentValue.value.end), 'yyyy-MM-dd')\r\n      const clubIdParse = JSON.parse(localStorage.getItem('sportClub'))\r\n      const activeClubId = clubIdParse && clubIdParse.id ? clubIdParse.id : selectedClub.value.id\r\n\r\n      getRangeDateData(startDate, endDate, activeClubId)\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    const getRangeDateData = async (startDate, endDate, activeClubId) => {\r\n      if (!activeClubId) {\r\n        return;\r\n      }\r\n      await axios.get(`get-weekly-dashboard-statistics-data/${startDate}/${endDate}/${activeClubId}`)\r\n      .then(res => {\r\n        var totalHours = res.data[4].TotalHours\r\n        // var totalHours = 25\r\n        var dateRange = res.data[0].Morning[0].map(function(date) {\r\n          return format(new Date(date.play_date), 'dd,MMM')\r\n        })\r\n        var morningHoursData = res.data[0].Morning[0].map(function(hours) {\r\n          return hours.total_hours\r\n        })\r\n        var afternoonHoursData = res.data[1].Afternoon[0].map(function(hours) {\r\n          return hours.total_hours\r\n        })\r\n        var eveningHoursData = res.data[2].Evening[0].map(function(hours) {\r\n          return hours.total_hours\r\n        })\r\n        var nightHoursData = res.data[3].Night[0].map(function(hours) {\r\n          return hours.total_hours\r\n        })\r\n          doughnutChart.options.plugins.title = {\r\n            text: `FAVORITE PART OF THE DAY FROM ${startDate} TO ${endDate}`,\r\n            display: false\r\n          }\r\n          doughnutChart.data.labels = ['Morning', 'Afternoon', 'Evening', 'Night']\r\n          doughnutChart.data.datasets = [\r\n            {\r\n              backgroundColor: [\r\n                '#abecd8',\r\n                '#46cdcf',\r\n                '#3c84a8',\r\n                '#47466d'\r\n              ],\r\n            data: totalHours\r\n            }\r\n          ]\r\n          chartRef.value.update(300)\r\n\r\n          barChart.options.plugins.title = {\r\n            display: false,\r\n            text: `BOOKING HOURS DATA FROM ${startDate} TO ${endDate}`\r\n          }\r\n          barChart.data.labels = dateRange\r\n          barChart.data.datasets = [\r\n            {\r\n              label: \"Morning\",\r\n              backgroundColor: ['#abecd8'],\r\n              data: morningHoursData,\r\n            },\r\n            {\r\n              label: \"Afternoon\",\r\n              backgroundColor: ['#46cdcf'],\r\n              data: afternoonHoursData,\r\n            },\r\n            {\r\n              label: \"Evening\",\r\n              backgroundColor: ['#3c84a8'],\r\n              data:eveningHoursData,\r\n            },\r\n            {\r\n              label: \"Night\",\r\n              backgroundColor: ['#47466d'],\r\n              data: nightHoursData,\r\n            },\r\n          ]\r\n          barChartRef.value.update(250)\r\n      })\r\n      .catch(err => {\r\n        if(err.response) {\r\n          console.log(err.response.data.message)\r\n        } else {\r\n          console.log('No response!')\r\n        }\r\n      })\r\n    }\r\n\r\n    const delayed = ref();\r\n\r\n    const barChart = {\r\n      type: \"bar\",\r\n      options: {\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false\r\n        },\r\n        tooltip: {\r\n          display: true\r\n        },\r\n        animation: {\r\n          onComplete: () => {\r\n            delayed.value = true;\r\n          },\r\n          delay: (context) => {\r\n            var delay = 0;\r\n            if (context.type === 'data' && context.mode === 'default' && !delayed.value) {\r\n              delay = context.dataIndex * 300 + context.datasetIndex * 100;\r\n            }\r\n            return delay;\r\n          }\r\n        },\r\n        min: 0,\r\n        max: 100,\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            display: true,\r\n          },\r\n          title: {\r\n            display: false,\r\n            text: 'BAR CHART'\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            stacked: true\r\n          },\r\n          y: {\r\n            min: 0,\r\n            ticks: {\r\n              callback: function (value) {\r\n                return `${value} H` \r\n              }\r\n            },\r\n            stacked: true\r\n          }\r\n        }\r\n      },\r\n      data: {\r\n        labels: ['Date Range'],\r\n        datasets: [\r\n          {\r\n            label: \"Morning\",\r\n            backgroundColor: [\"#abecd8\"],\r\n            data: ['23', '12']\r\n          },\r\n          {\r\n            label: \"Afternoon\",\r\n            backgroundColor: [\"#47466d\"],\r\n            data: ['23', '12'],\r\n          },\r\n          {\r\n            label: \"Evening\",\r\n            backgroundColor: [\"#3c84a8\"],\r\n            data: ['23', '12'],\r\n          },\r\n          {\r\n            label: \"Night\",\r\n            backgroundColor: [ \"#46cdcf\"],\r\n            data: ['23', '12'],\r\n          },\r\n        ]\r\n      },\r\n    }\r\n\r\n    const doughnutChart = {\r\n      id: 'doughnut',\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: ['Morning', 'Afternoon', 'Evening', 'Night'],\r\n        datasets: [\r\n          {\r\n            backgroundColor: [\r\n              '#abecd8',\r\n              '#47466d',\r\n              '#3c84a8',\r\n              '#46cdcf'\r\n            ],\r\n            data: ['23', '12', '34', '42']\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        plugins: {}\r\n      }\r\n    }\r\n\r\n    return {\r\n      format,\r\n      labelOptions,\r\n      selectedLabel,\r\n      getLabelOption,\r\n      showDatePicker,\r\n      range,\r\n      barChart,\r\n      delayed,\r\n      doughnutChart,\r\n      chartRef,\r\n      barChartRef,\r\n      dragValue,\r\n      showMonthPicker,\r\n      monthPickerValue,\r\n      showYearPicker,\r\n      yearPickerValue,\r\n      loopYears,\r\n      isYearly,\r\n      selectedClub,\r\n      selectedClubId,\r\n      getRangeDateData,\r\n      getYearData\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.day-parts-stat {\r\n  display: grid;\r\n  grid-template-columns: 3fr 2fr;\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 0px;\r\n  grid-row-gap: 0px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  padding-top: 1em;\r\n}\r\n.day-parts-stat-barchart {\r\n  grid-area: 1 / 1 / 2 / 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n.day-parts-stat-doughnut {\r\n  grid-area: 1 / 2 / 2 / 3;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.select-option {\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 1em;\r\n}\r\n.option-selection {\r\n  border-radius: 10px;\r\n  padding: .5em 1em;\r\n  margin-right: 1em;\r\n}\r\n.option-selection:focus {\r\n  outline: none;\r\n}\r\n.date-picker-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.date-range-picker {\r\n  margin-top: 1em;\r\n}\r\n.date-picker-container h2 {\r\n  padding: 0 .5em;\r\n}\r\n.barchart-title {\r\n  text-align: right;\r\n  line-height: 2em;\r\n}\r\n.doughnut-title {\r\n  margin-top: -1em;\r\n  text-align: center;\r\n  line-height: 2em;\r\n  margin-bottom: .5em;\r\n}\r\n.doughnut-title p,\r\n.barchart-title p {\r\n  font-size: 1.2em;\r\n}\r\n</style>"],"sourceRoot":""}]}