{"remainingRequest":"C:\\Users\\User\\Documents\\front-end\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\User\\Documents\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\User\\Documents\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\User\\Documents\\front-end\\src\\components\\charts\\PopularTimeChart.vue?vue&type=template&id=be4c8294&scoped=true","dependencies":[{"path":"C:\\Users\\User\\Documents\\front-end\\src\\components\\charts\\PopularTimeChart.vue","mtime":1658915537896},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658915600135},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1658915600125},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1658915600945},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1658915603265},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658915600135},{"path":"C:\\Users\\User\\Documents\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1658915601640}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvVXNlci9Eb2N1bWVudHMvZnJvbnQtZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCB2TW9kZWxTZWxlY3QgYXMgX3ZNb2RlbFNlbGVjdCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgbWVyZ2VQcm9wcyBhcyBfbWVyZ2VQcm9wcywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtYmU0YzgyOTQiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LWJlNGM4Mjk0Iik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInBvcHVsYXItdGltZS1jaGFydC1tYWluIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogInBvcHVsYXItdGltZS1jaGFydC1tYWluLXRpdGxlIgp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoMSIsIG51bGwsICLwn4+54oyb4o+yIFBvcHVsYXIgVGltZXMiLCAtMSk7Cgp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogInBvcHVsYXItdGltZS1maWx0ZXIiCn07Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoIm9wdGlvbiIsIHsKICB2YWx1ZTogIiIsCiAgZGlzYWJsZWQ6ICIiCn0sICJQbGVhc2UgU2VsZWN0IGFuIG9wdGlvbiIsIC0xKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9DYWxlbmRhciA9IF9yZXNvbHZlQ29tcG9uZW50KCJDYWxlbmRhciIpOwoKICB2YXIgX2NvbXBvbmVudF92dWUzX2NoYXJ0X2pzID0gX3Jlc29sdmVDb21wb25lbnQoInZ1ZTMtY2hhcnQtanMiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2hvaXN0ZWRfMywgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgic2VsZWN0IiwgewogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5zZWxlY3RlZExhYmVsID0gJGV2ZW50OwogICAgfSksCiAgICBvbkNoYW5nZTogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuZ2V0TGFiZWxPcHRpb24oJGV2ZW50KTsKICAgIH0pLAogICAgY2xhc3M6ICJvcHRpb24tc2VsZWN0aW9uIgogIH0sIFtfaG9pc3RlZF81LCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHNldHVwLmxhYmVsT3B0aW9ucywgZnVuY3Rpb24gKGxhYmVsKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soIm9wdGlvbiIsIHsKICAgICAga2V5OiBsYWJlbCwKICAgICAgdmFsdWU6IGxhYmVsCiAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKGxhYmVsKSwgOSwgWyJ2YWx1ZSJdKTsKICB9KSwgMTI4KSldLCA1NDQpLCBbW192TW9kZWxTZWxlY3QsICRzZXR1cC5zZWxlY3RlZExhYmVsXV0pLCAkc2V0dXAuc2hvd01vbnRoUGlja2VyID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfQ2FsZW5kYXIsIHsKICAgIGtleTogMCwKICAgIG1vZGVsVmFsdWU6ICRzZXR1cC5tb250aFBpY2tlclZhbHVlLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5tb250aFBpY2tlclZhbHVlID0gJGV2ZW50OwogICAgfSksCiAgICB2aWV3OiAibW9udGgiLAogICAgZGF0ZUZvcm1hdDogIm1tL3l5IiwKICAgIHNob3dJY29uOiB0cnVlCiAgfSwgbnVsbCwgOCwgWyJtb2RlbFZhbHVlIl0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoIiIsIHRydWUpLCAkc2V0dXAuc2hvd1llYXJQaWNrZXIgPyBfd2l0aERpcmVjdGl2ZXMoKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJzZWxlY3QiLCB7CiAgICBrZXk6IDEsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLnllYXJQaWNrZXJWYWx1ZSA9ICRldmVudDsKICAgIH0pLAogICAgY2xhc3M6ICJvcHRpb24tc2VsZWN0aW9uIHllYXItc2VsZWN0aW9uIgogIH0sIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHNldHVwLmxvb3BZZWFycywgZnVuY3Rpb24gKHllYXIpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygib3B0aW9uIiwgewogICAgICBrZXk6IHllYXIsCiAgICAgIHZhbHVlOiB5ZWFyLAogICAgICBjbGFzczogInllYXItb3B0aW9uIgogICAgfSwgX3RvRGlzcGxheVN0cmluZyh5ZWFyKSwgOSwgWyJ2YWx1ZSJdKTsKICB9KSwgMTI4KSldLCA1MTIpKSwgW1tfdk1vZGVsU2VsZWN0LCAkc2V0dXAueWVhclBpY2tlclZhbHVlXV0pIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIiwgdHJ1ZSldKV0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF92dWUzX2NoYXJ0X2pzLCBfbWVyZ2VQcm9wcyhfb2JqZWN0U3ByZWFkKHt9LCAkc2V0dXAubGluZUNoYXJ0KSwgewogICAgcmVmOiAiY2hhcnRSZWYiCiAgfSksIG51bGwsIDE2KV0pOwp9KTs="},{"version":3,"sources":["C:\\Users\\User\\Documents\\front-end\\src\\components\\charts\\PopularTimeChart.vue"],"names":[],"mappings":";;;;;;;;AACO,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;8BACT,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,EAAsB,CAAA,CAAtB,C;;;AACK,EAAA,KAAK,EAAC;;;8BAEP,YAAA,CAA0D,QAA1D,EAA0D;AAAlD,EAAA,KAAK,EAAC,EAA4C;AAAzC,EAAA,QAAQ,EAAR;AAAyC,CAA1D,EAA0B,yBAA1B,EAAiD,CAAA,CAAjD,C;;;;;;;;;uBALR,YAAA,CA2BM,KA3BN,EAAA,UAAA,EA2BM,CA1BJ,YAAA,CAwBM,KAxBN,EAAA,UAAA,EAwBM,CAvBJ,UAuBI,EAtBJ,YAAA,CAqBM,KArBN,EAAA,UAAA,EAqBM,C,gBApBJ,YAAA,CAKS,QALT,EAKS;;aALQ,MAAA,CAAA,aAAA,GAAa,M;MAKrB;AALwB,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,cAAA,CAAe,MAAf,CAAF;AAAA,KAAA,CAK9B;AALwD,IAAA,KAAK,EAAC;AAK9D,GALT,E,CACE,U,qBACA,YAAA,CAES,SAFT,EAES,IAFT,EAES,WAAA,CAFe,MAAA,CAAA,YAEf,EAF2B,UAArB,KAAqB,EAAhB;yBAApB,YAAA,CAES,QAFT,EAES;AAF8B,MAAA,GAAG,EAAE,KAEnC;AAF2C,MAAA,KAAK,EAAE;AAElD,KAFT,E,iBACI,K,CADJ,EACS,CADT,EACS,CAAA,OAAA,CADT,C;GAES,CAFT,E,GAAA,C,EAFF,E,GAAA,C,mBAAiB,MAAA,CAAA,a,GAoBb,EATI,MAAA,CAAA,e,kBALR,YAAA,CAME,mBANF,EAME;UAAA;gBALS,MAAA,CAAA,gBAKT;;aALS,MAAA,CAAA,gBAAA,GAAgB,M;MAKzB;AAJA,IAAA,IAAI,EAAC,OAIL;AAHA,IAAA,UAAU,EAAC,OAGX;AAFC,IAAA,QAAQ,EAAE;AAEX,GANF,E,IAAA,E,CAAA,E,cAAA,C,iCAcI,EALE,MAAA,CAAA,c,kCAFN,YAAA,CAMS,QANT,EAMS;UAAA;;aANQ,MAAA,CAAA,eAAA,GAAe,M;MAMvB;AALT,IAAA,KAAK,EAAC;AAKG,GANT,E,oBAGE,YAAA,CAES,SAFT,EAES,IAFT,EAES,WAAA,CAFc,MAAA,CAAA,SAEd,EAFuB,UAAjB,IAAiB,EAAb;yBAAnB,YAAA,CAES,QAFT,EAES;AAF0B,MAAA,GAAG,EAAE,IAE/B;AAFsC,MAAA,KAAK,EAAE,IAE7C;AAFmD,MAAA,KAAK,EAAC;AAEzD,KAFT,E,iBACI,I,CADJ,EACQ,CADR,EACQ,CAAA,OAAA,CADR,C;GAES,CAFT,E,GAAA,C,EAHF,E,GAAA,C,oBAAiB,MAAA,CAAA,e,mCAOb,CArBN,CAsBI,CAxBN,CA0BI,EADJ,YAAA,CAA0D,wBAA1D,EAAA,WAAA,mBAA4B,MAAA,CAAA,SAA5B,GAAqC;AAAI,IAAA,GAAG,EAAC;AAAR,GAArC,CAAA,EAAuD,IAAvD,EAAuD,EAAvD,CACI,CA3BN,C","sourcesContent":["<template>\r\n  <div class=\"popular-time-chart-main\">\r\n    <div class=\"popular-time-chart-main-title\">\r\n      <h1>üèπ‚åõ‚è≤ Popular Times</h1>\r\n      <div class=\"popular-time-filter\">\r\n        <select v-model=\"selectedLabel\" @change=\"getLabelOption($event)\" class=\"option-selection\">\r\n          <option value=\"\" disabled>Please Select an option</option>\r\n          <option v-for=\"label in labelOptions\" :key=\"label\" :value=\"label\">\r\n            {{label}}\r\n          </option>\r\n        </select>\r\n        <Calendar \r\n          v-model=\"monthPickerValue\"\r\n          view=\"month\"\r\n          dateFormat=\"mm/yy\"\r\n          :showIcon=\"true\"\r\n          v-if=\"showMonthPicker\"\r\n        />\r\n        <select v-model=\"yearPickerValue\" \r\n        class=\"option-selection year-selection\" \r\n        v-if=\"showYearPicker\">\r\n          <option v-for=\"year in loopYears\" :key=\"year\" :value=\"year\" class=\"year-option\">\r\n            {{year}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <vue3-chart-js v-bind=\"{ ...lineChart }\" ref=\"chartRef\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue3ChartJs from '@j-t-mcc/vue3-chartjs'\r\nimport zoomPlugin from 'chartjs-plugin-zoom'\r\nimport dataLabels from 'chartjs-plugin-datalabels'\r\nimport { onMounted, ref, computed, watch, toRefs } from '@vue/runtime-core'\r\nimport axios from 'axios'\r\nimport Calendar from 'primevue/calendar';\r\nimport { format } from 'date-fns'\r\n\r\nVue3ChartJs.registerGlobalPlugins([zoomPlugin])\r\n\r\nexport default {\r\n  props: {\r\n    selectedClub: {\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    Vue3ChartJs,\r\n    Calendar\r\n  },\r\n  setup(props) {\r\n    const selectedClub = toRefs(props).selectedClub\r\n    const labelOptions = ref(['Monthly', 'Yearly'])\r\n    const getPopularTimesLabels = ref([])\r\n    const getPopularTimesHours = ref([])\r\n    const chartRef = ref(null)\r\n    const showMonthPicker = ref(false)\r\n    const showYearPicker = ref(false)\r\n    const monthPickerValue = ref(null)\r\n    const yearPickerValue = ref(null)\r\n    const isYearly =  ref(false)\r\n    const selectedLabel = ref('Monthly')\r\n    const range = ref({\r\n      start: new Date(),\r\n      end: new Date()\r\n    })\r\n\r\n    const loopYears = computed(() => {\r\n      var thisYear = new Date().getFullYear()\r\n      var previousYear = thisYear - 10\r\n      var yearsList = []\r\n      for(let i = previousYear; i <= thisYear; i++) {\r\n        yearsList.push(i)\r\n      }\r\n      return yearsList\r\n    })\r\n\r\n    const getLabelOption = (e) => {\r\n      if (e.target.value) {\r\n        isYearly.value = false\r\n      }\r\n\r\n      if (e.target.value === 'Monthly') {\r\n        showMonthPicker.value = true\r\n        monthPickerValue.value = new Date()\r\n        yearPickerValue.value = null\r\n      } else {\r\n        showMonthPicker.value = false\r\n      }\r\n\r\n      if (e.target.value === 'Yearly') {\r\n        showYearPicker.value = true\r\n        yearPickerValue.value = new Date().getFullYear()\r\n      } else {\r\n        showYearPicker.value = false\r\n      }\r\n    }\r\n\r\n    watch(() => selectedClub.value, (currentValue, oldValue) => {\r\n      const startDate = format(new Date(range.value.start), 'yyyy-MM-dd') \r\n      const endDate = format(new Date(range.value.end), 'yyyy-MM-dd')\r\n      const activeClubId = currentValue.id\r\n      getPopularTimesData(startDate, endDate, activeClubId)\r\n    }, {\r\n      deep: true\r\n    })\r\n\r\n    watch(() => monthPickerValue, (currentValue, oldValue) => {\r\n      var date = currentValue.value\r\n      var firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1)\r\n      var lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n\r\n      range.value.start = firstDateOfMonth\r\n      range.value.end = lastDateOfMonth\r\n    }, \r\n    { deep: true })\r\n\r\n    watch(() => yearPickerValue, (currentValue, oldValue) => {\r\n      const firstDay = new Date(currentValue.value, 0, 1)\r\n      const lastDay = new Date(currentValue.value, 12, 0)\r\n      const firstDayOfYear = format(new Date(firstDay), 'yyyy-MM-dd') \r\n      const lastDayOfYear = format(new Date(lastDay), 'yyyy-MM-dd') \r\n      range.value.start = firstDayOfYear\r\n      range.value.end = lastDayOfYear\r\n      if (currentValue.value || oldValue.value) {\r\n        isYearly.value = true\r\n      } else {\r\n        isYearly.value = false\r\n      }\r\n      const clubIdParse = JSON.parse(localStorage.getItem('sportClub'))\r\n      const activeClubId = clubIdParse && clubIdParse.id ? clubIdParse.id : selectedClub.value.id\r\n      \r\n      getPopularTimesData(firstDayOfYear, lastDayOfYear, activeClubId)\r\n    }, \r\n    { deep: true })\r\n\r\n    const getPopularTimesData = async (startDate, endDate, activeClubId) => {\r\n      if (!activeClubId) {\r\n        return;\r\n      }\r\n      axios.get(`get-most-booking-hour-club-wise/${startDate}/${endDate}/${activeClubId}`)\r\n      .then(res => {\r\n        const totalHoursArr = []\r\n        const getUpdateLabels = []\r\n        res.data.map(hour => {\r\n          const hourStr = `${hour.hour} - ${(parseInt(hour.hour) + 1)} ${(parseInt(hour.hour) + 1) > 11 ? 'PM':'AM'}`\r\n          getUpdateLabels.push(hourStr)\r\n          totalHoursArr.push(hour.total)\r\n\r\n        })\r\n        lineChart.data.labels = getUpdateLabels\r\n        lineChart.data.datasets[0].data = totalHoursArr\r\n        lineChart.data.datasets[0].label = `SHOWED DATA FROM ${startDate} ‚Ä¢ ${endDate}`\r\n        chartRef.value.update(300)\r\n      })\r\n      .catch(err => {\r\n        if (err.response) {\r\n          console.log(err.response.data.message)\r\n        } else {\r\n          console.log('No response!')\r\n        }\r\n      })\r\n    }\r\n\r\n    watch(() => range, (currentValue, oldValue) => {\r\n      const startDate = format(new Date(currentValue.value.start), 'yyyy-MM-dd') \r\n      const endDate = format(new Date(currentValue.value.end), 'yyyy-MM-dd')\r\n      const clubIdParse = JSON.parse(localStorage.getItem('sportClub'))\r\n      const activeClubId = clubIdParse && clubIdParse.id ? clubIdParse.id : selectedClub.value.id\r\n\r\n      getPopularTimesData(startDate, endDate, activeClubId)\r\n    }, \r\n    { deep: true })\r\n\r\n    const lineChart = {\r\n      type: \"line\",\r\n      plugins: [dataLabels],\r\n      data: {\r\n        labels: getPopularTimesLabels.value,\r\n        datasets: [\r\n          {\r\n            label: \"Caffine Consumption\",\r\n            data: [4, 3, 2, 3, 4, 2, 1, 4, 5, 9, 10],\r\n            fill: false,\r\n            borderColor: \"blue\",\r\n            backgroundColor: \"black\",\r\n          }\r\n        ],\r\n      },\r\n      options: {\r\n        hoverRadius: 18,\r\n        hoverBackgroundColor: 'black',\r\n        min: 0,\r\n        max: 100,\r\n        responsive: true,\r\n        plugins: {\r\n          // zoom: {\r\n          //   zoom: {\r\n          //     wheel: {\r\n          //       enabled: true\r\n          //     },\r\n          //     pinch: {\r\n          //       enabled: true\r\n          //     },\r\n          //     mode: \"y\"\r\n          //   }\r\n          // },\r\n          datalabels: {\r\n            backgroundColor: function (context) {\r\n              return context.dataset.backgroundColor\r\n            },\r\n            borderRadius: 4,\r\n            color: \"white\",\r\n            font: {\r\n              weight: \"bold\"\r\n            },\r\n            formatter: Math.round,\r\n            padding: 6\r\n          },\r\n          legend: {\r\n            labels: {\r\n              font: {\r\n                weight: '600',\r\n                size: '18'\r\n              }\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            min: 0,\r\n            ticks: {\r\n              callback: function (value) {\r\n                return `${value} times`\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      showMonthPicker.value = true\r\n      monthPickerValue.value = new Date()\r\n\r\n      var date = new Date()\r\n      var firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      var lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n      const startDate = format(firstDateOfMonth, 'yyyy-MM-dd') \r\n      const endDate = format(lastDateOfMonth, 'yyyy-MM-dd')\r\n      const clubIdParse = JSON.parse(localStorage.getItem('sportClub'))\r\n      const activeClubId = clubIdParse && clubIdParse.id ? clubIdParse.id : selectedClub.value.id\r\n\r\n      getPopularTimesData(startDate, endDate, activeClubId)\r\n    })\r\n\r\n    return {\r\n      getPopularTimesData,\r\n      lineChart,\r\n      getPopularTimesLabels,\r\n      getPopularTimesHours,\r\n      chartRef,\r\n      showMonthPicker,\r\n      showYearPicker,\r\n      monthPickerValue,\r\n      yearPickerValue,\r\n      loopYears,\r\n      isYearly,\r\n      labelOptions,\r\n      range,\r\n      getLabelOption,\r\n      selectedLabel\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.select-option {\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 1em;\r\n}\r\n.option-selection {\r\n  border-radius: 10px;\r\n  padding: .5em 1em;\r\n  margin-right: 1em;\r\n  height: 3em;\r\n}\r\n.option-selection:focus {\r\n  outline: none;\r\n}\r\n.popular-time-chart-main-title {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1em;\r\n}\r\n</style>"],"sourceRoot":""}]}