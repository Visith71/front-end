{"remainingRequest":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\User\\Documents\\pitchbooker\\src\\components\\main-component\\clubAutoComplete.vue?vue&type=style&index=0&id=f8484938&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\User\\Documents\\pitchbooker\\src\\components\\main-component\\clubAutoComplete.vue","mtime":1658915537899},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658915600439},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1658915603046},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\postcss-loader\\src\\index.js","mtime":1658915600936},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658915600135},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1658915601640}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoub3duZWQtY2x1YiB7DQogIHBvaW50ZXItZXZlbnRzOiBub25lOw0KICBvcGFjaXR5OiAuNTsNCn0NCg=="},{"version":3,"sources":["C:\\Users\\User\\Documents\\pitchbooker\\src\\components\\main-component\\clubAutoComplete.vue"],"names":[],"mappings":";AAsEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACb","file":"C:/Users/User/Documents/pitchbooker/src/components/main-component/clubAutoComplete.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <AutoComplete\r\n    v-model=\"selectedClub\"\r\n    :suggestions=\"filteredClub\"\r\n    @complete=\"searchClub($event)\"\r\n    :dropdown=\"true\"\r\n    field=\"name\"\r\n    forceSelection\r\n    @clear=\"clearAutoComplete\"\r\n    @item-select=\"itemSelect($event)\"\r\n  >\r\n    <template #item=\"slotProps\">\r\n      <div :class=\"slotProps.item.sport_club ? 'owned-club':''\">\r\n        âš½ #{{ slotProps.item.id }}: <b>{{ slotProps.item.name }}</b> <span v-if=\"slotProps.item.sport_club\">owned <b>{{ slotProps.item.sport_club.name }}</b></span>\r\n      </div>\r\n    </template>\r\n  </AutoComplete>\r\n</template>\r\n\r\n<script>\r\nimport AutoComplete from 'primevue/autocomplete';\r\n\r\nexport default {\r\n  props: ['getAllSportClubs', 'selected'],\r\n  components: {\r\n    AutoComplete\r\n  },\r\n  data() {\r\n    return {\r\n      selectedClub: this.selected ? this.selected : null,\r\n      filteredClub: null\r\n    }\r\n  },\r\n  watch: {\r\n    selectedClub(curValue) {\r\n      if (curValue && curValue.id) {\r\n        this.$emit('emitSelectedClub', curValue)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    searchClub(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredClub = [...this.getAllSportClubs.items];\r\n        } else {\r\n          this.filteredClub = this.getAllSportClubs.items.filter((club) => {\r\n            return club.name.toLowerCase().startsWith(event.query.toLowerCase())\r\n          })\r\n        }\r\n      }, 250)\r\n    },\r\n    clearAutoComplete() {\r\n      this.$emit('clearAutoComplete')\r\n      console.log('clear')\r\n    },\r\n    itemSelect(event) {\r\n      if(event.value && event.value.sport_club) {\r\n        this.toast(`${event.value.name} already owned a sportclub!`, 3000, 'error')\r\n        this.selectedClub = null\r\n        return\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.owned-club {\r\n  pointer-events: none;\r\n  opacity: .5;\r\n}\r\n</style>"]}]}