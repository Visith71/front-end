{"remainingRequest":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\User\\Documents\\pitchbooker\\src\\views\\Transactions.vue?vue&type=style&index=0&id=2d8e6fe2&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\User\\Documents\\pitchbooker\\src\\views\\Transactions.vue","mtime":1658915537913},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\css-loader\\dist\\cjs.js","mtime":1658915600439},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1658915603046},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\postcss-loader\\src\\index.js","mtime":1658915600936},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658915600135},{"path":"C:\\Users\\User\\Documents\\pitchbooker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1658915601640}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubm8tdHJhbnNhY3Rpb24tZGF0YSB7DQogIGZvbnQtc2l6ZTogMS4xZW07DQogIG1hcmdpbi10b3A6IDJlbTsNCn0NCi50cmFuc2FjdGlvbi1jYXJkLWxheW91dCB7DQogIG1hcmdpbi10b3A6IDJlbTsNCiAgcGFkZGluZy1ib3R0b206IDJlbTsNCn0NCg=="},{"version":3,"sources":["C:\\Users\\User\\Documents\\pitchbooker\\src\\views\\Transactions.vue"],"names":[],"mappings":";AAqNA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrB","file":"C:/Users/User/Documents/pitchbooker/src/views/Transactions.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"main transactions-main\">\r\n    <div class=\"main-title title-section transaction-title\">\r\n      <div class=\"title\">\r\n        <img src=\"../assets/icons/transaction-icon.svg\">\r\n        <h1>Transactions</h1>\r\n      </div>\r\n    </div>\r\n      <div class=\"card-section animate__animated animate__fadeInUp\">\r\n        <div class=\"transaction-card-layout cards-layout\">\r\n          <div>\r\n            <TransactionListView \r\n              :transactions=\"transactions\"\r\n              @dispatchTransactionByPag=\"dispatchTransactionByPag\"\r\n              :getAllSportClubs=\"getAllSportClubs\"\r\n              @getSelectedClub=\"getSelectedClub\"\r\n              :selectedClub=\"selectedClub\"\r\n              @clearAutoComplete=\"clearAutoComplete\"\r\n            />\r\n            <div class=\"table-pagination\">\r\n              <div class=\"page-size\">\r\n                <select v-model=\"itemSize\" class=\"item-size-select\">\r\n                  <option v-for=\"opt in itemSizeList\" :key=\"opt\" :value=\"opt\">\r\n                    {{ opt }}\r\n                  </option>\r\n                </select>\r\n                <p class=\"item-per-page\"> | Showing {{ getFirstItemNum }} to {{getLastItemNum}} of <i>{{transactions.total}} items</i></p>\r\n              </div>\r\n              <v-pagination \r\n                v-model=\"pageNum\"\r\n                :pages=\"getTotalPage\"\r\n                :range-size=\"1\"\r\n                active-color=\"f2f2f2\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div v-if=\"transactions.items && transactions.items.length <= 0\" class=\"no-data-div no-transaction-data animate__animated animate__jello\">\r\n            <h1>No Transactions Data Available üåüüôåüëè</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n  <ModalView v-if=\"openedAddTransaction\" @closeModal=\"openedAddTransaction = null\">\r\n   <AddTransaction @changeAddTransaction=\"changeAddTransaction\" />\r\n  </ModalView>\r\n</template>\r\n\r\n<script>\r\nimport ModalView from '../components/main-component/ModalView.vue'\r\nimport TransactionListView from '../components/transactions/TransactionListView.vue'\r\nimport VPagination from '@hennge/vue3-pagination';\r\nimport \"@hennge/vue3-pagination/dist/vue3-pagination.css\"\r\nimport { getAllClubs } from '../composable/mixins/getAllClub' \r\n\r\nexport default {\r\n  mixins: [getAllClubs],\r\n  components: { \r\n    ModalView,\r\n    TransactionListView,\r\n    VPagination\r\n  },\r\n  data() {\r\n    // var transactionsSort = localStorage.getItem('transactionsSort')\r\n    return {\r\n      // transactionsSort: transactionsSort ? JSON.parse(transactionsSort) : null,\r\n      transactionsSort: null,\r\n      pageNum: 1,\r\n      pageSize: 3,\r\n      itemSize: null,\r\n      itemSizeList: [5, 10, 20, 30, 40, 50],\r\n      pickedItemSize: null,\r\n      openedAddTransaction: null,\r\n      selectedClub: null\r\n    }\r\n  },\r\n  watch: {\r\n    pageNum() {\r\n      let params = null\r\n      if (!this.transactionsSort) {\r\n        params = {\r\n          page: this.pageNum,\r\n          itemsPerPage: this.itemSize\r\n        }\r\n      } else {\r\n        params = {\r\n          page: this.pageNum,\r\n          itemsPerPage: this.itemSize,\r\n          sortBy: this.transactionsSort.sortBy,\r\n          sortDesc: this.transactionsSort.sortDesc\r\n        }\r\n      }\r\n      localStorage.setItem('transactionPagInfo', JSON.stringify(params))\r\n      if (!this.selectedClub) {\r\n        this.$store.dispatch('transactions/getTransactions', params)\r\n      } else {\r\n        this.$store.dispatch('transactions/getTransactionsByClubId', {\r\n          ...params,\r\n          id: this.selectedClub.id\r\n        })\r\n      }\r\n    },\r\n    itemSize(curValue) {\r\n      let params = null\r\n      if (!this.transactionsSort) {\r\n        params = {\r\n          page: this.pageNum,\r\n          itemsPerPage: this.itemSize\r\n        }\r\n      } else {\r\n        params = {\r\n          page: this.pageNum,\r\n          itemsPerPage: this.itemSize,\r\n          sortBy: this.transactionsSort.sortBy,\r\n          sortDesc: this.transactionsSort.sortDesc\r\n        }\r\n      }\r\n      localStorage.setItem('transactionPagInfo', JSON.stringify(params))\r\n      if (!this.selectedClub) {\r\n        this.$store.dispatch('transactions/getTransactions', params)\r\n      } else {\r\n        this.$store.dispatch('transactions/getTransactionsByClubId', {\r\n          ...params,\r\n          id: this.selectedClub.id\r\n        })\r\n      }\r\n    },\r\n    selectedClub(curValue) {\r\n      if (curValue && curValue.id) {\r\n        const pagInfo = JSON.parse(localStorage.getItem('transactionPagInfo'))\r\n        try {\r\n          this.$store.dispatch('transactions/getTransactionsByClubId', {  \r\n            itemsPerPage: pagInfo.itemsPerPage,\r\n            page: pagInfo.page,\r\n            id: curValue.id\r\n          })\r\n        } catch(err) {\r\n          console.log(err)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    dispatchTransactionByPag(params) {\r\n      this.transactionsSort = params\r\n      if (!this.selectedClub) {\r\n        this.$store.dispatch('transactions/getTransactions', {\r\n          itemsPerPage: this.itemSize,\r\n          page: this.pageNum,\r\n          sortDesc: params.sortDesc,\r\n          sortBy: params.sortBy\r\n        })\r\n      } else {\r\n        this.$store.dispatch('transactions/getTransactionsByClubId', {\r\n          itemsPerPage: this.itemSize,\r\n          page: this.pageNum,\r\n          sortDesc: params.sortDesc,\r\n          sortBy: params.sortBy,\r\n          id: this.selectedClub.id\r\n        })\r\n      }\r\n    },\r\n    openAddTransaction() {\r\n      this.openedAddTransaction = true\r\n    },\r\n    changeAddTransaction({closeModal}) {\r\n      if(closeModal) {\r\n        this.openedAddTransaction = null\r\n      }\r\n    },\r\n    clearAutoComplete() {\r\n      const pagInfo = JSON.parse(localStorage.getItem('transactionPagInfo'))\r\n      this.$store.dispatch('transactions/getTransactions', pagInfo)\r\n      this.selectedClub = null\r\n    },\r\n  },\r\n  computed: {\r\n    transactions() {\r\n      return this.$store.getters['transactions/transactions']\r\n    },\r\n    getTotalPage() {\r\n      return Math.ceil(this.transactions.total / this.itemSize)\r\n    },\r\n    getFirstItemNum() {\r\n      return (this.itemSize * this.pageNum) - (this.itemSize) + 1\r\n    },\r\n    getLastItemNum() {\r\n      const lastItemNum = (this.itemSize * this.pageNum)\r\n      return lastItemNum >= this.transactions.total ? this.transactions.total : lastItemNum  \r\n    }\r\n  },\r\n  created() {\r\n    const transactionPagInfo = JSON.parse(localStorage.getItem('transactionPagInfo'))\r\n    if (transactionPagInfo) {\r\n      this.itemSize = transactionPagInfo.itemsPerPage;\r\n      this.pickedItemSize = transactionPagInfo.itemsPerPage;\r\n    } else {\r\n      this.itemSize = 10;\r\n      this.pickedItemSize = 10\r\n    }\r\n\r\n    let params = {\r\n      itemsPerPage: this.itemSize,\r\n      page: this.pageNum\r\n    }\r\n    localStorage.setItem('transactionPagInfo', JSON.stringify(params))\r\n\r\n    this.$store.dispatch('transactions/getTransactions', params)\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.no-transaction-data {\r\n  font-size: 1.1em;\r\n  margin-top: 2em;\r\n}\r\n.transaction-card-layout {\r\n  margin-top: 2em;\r\n  padding-bottom: 2em;\r\n}\r\n</style>"]}]}